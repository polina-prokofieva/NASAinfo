{"version":3,"sources":["components/MarsWeather/MarsWeatherDay/MarsWeatherDay.js","actions/index.js","components/MarsWeather/Details/Details.js","components/Spinner/Spinner.js","components/Error/Error.js","services/NASAAPIService.js","components/MarsWeather/MarsWeather.js","components/Pages/MarsWeatherPage/MarsWeatherPage.js","components/TopMenu/TopMenu.js","components/Pages/GalleryPage/Preview/Preview.js","constants/index.js","components/Pages/GalleryPage/SelectMonth/SelectMonth.js","components/Pages/GalleryPage/SelectYear/SelectYear.js","components/Pages/GalleryPage/GalleryPage.js","components/PictureOfTheDay/PictureOfTheDay.js","components/Pages/HomePage/HomePage.js","components/App/App.js","reducers/index.js","store.js","index.js"],"names":["MarsWeatherDetail","type","label","value","unit","className","mapDispatchToProps","solChosen","sol","payload","connect","day","AT","HWS","PRE","First_UTC","altDay","Date","toLocaleDateString","month","at","Math","round","av","hws","pre","onClick","InfoBlock","title","measurement","data","transormedData","minimum","mn","maximum","mx","average","Object","keys","map","a","key","sol_data","earthDay","year","Season","Spinner","Error","error","NASAAPIService","_apiBase","_apiKey","_apiKeyParam","this","getResource","url","params","fullUrl","concat","join","fetch","res","ok","status","json","getPictureOfTheDay","date","getMarsWeather","MarsWeather","nasaService","state","solKeys","loading","onWeatherLoaded","props","weatherLoaded","setState","sol_keys","onError","then","catch","isDetailsVisible","hasDate","errorMessage","spinner","content","Component","MarsWeatherView","Fragment","MarsWeatherPage","id","TopMenu","href","Preview","explanation","onPictureLoaded","picture","localStorage","setItem","getItem","PictureView","alt","src","months","today","currentYear","getFullYear","currentMonth","getMonth","APODallYears","Array","fill","i","getMonthsOptions","isDisabled","defaultMonthOption","YearsOptions","defaultYearOption","length","SelectMonth","handleChange","monthChosen","monthsOptions","defaultValue","options","onChange","SelectYear","yearChosen","GalleryPage","startDate","endDate","dates","twoDigits","n","generateGalleryPreviews","start","end","setDate","getDate","unshift","formatDate","prevProps","prevState","updateDates","PictureOfTheDay","hdurl","console","log","target","rel","Gallery","viewDetails","App","path","component","HomePage","exact","initialState","reducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c101d1fd.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { solChosen } from \"../../../actions\";\r\n\r\nimport './MarsWeatherDay.css';\r\n\r\n\r\nconst MarsWeatherDay = ({ sol, day: { AT, HWS, PRE, First_UTC }, solChosen }) => {\r\n  const date = new Date(First_UTC);\r\n  const altDay = date.toLocaleDateString('en-US', {month: 'short', day: 'numeric'});\r\n\r\n  const at = AT ? Math.round(AT.av) : '&ndash;';\r\n  const hws = HWS ? Math.round(HWS.av) : '&ndash;';\r\n  const pre = PRE ? Math.round(PRE.av) : '&ndash;';\r\n\r\n  const onDayClick = () => {\r\n    solChosen(sol);\r\n  }\r\n\r\n  return (\r\n    <div className=\"marsWeatherDay\"\r\n          onClick={onDayClick}>\r\n      <p className=\"solDate\">Sol {sol}</p>\r\n      <p className=\"date\">{altDay}</p>\r\n      <MarsWeatherDetail\r\n        type=\"airT\"\r\n        label=\"Air temp.\"\r\n        value={at}\r\n        unit=\"°C\"\r\n      />\r\n      <MarsWeatherDetail\r\n        type=\"wind\"\r\n        label=\"Wind\"\r\n        value={hws}\r\n        unit=\"m/s\"\r\n      />\r\n      <MarsWeatherDetail\r\n        type=\"pressure\"\r\n        label=\"Press.\"\r\n        value={pre}\r\n        unit=\"Pa\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst MarsWeatherDetail = ({ type, label, value, unit }) => {\r\n  return (\r\n    <p className={type}>\r\n      <span className=\"label\">{label}:&nbsp;</span><span className=\"value\">{value}</span><span className=\"unit\">{unit}</span>\r\n    </p>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n  return {}\r\n};\r\n\r\nconst mapDispatchToProps = { solChosen };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MarsWeatherDay);","const yearChosen = (year) => {\r\n  return {\r\n    type: 'YEAR_CHOSEN',\r\n    payload: year\r\n  };\r\n};\r\n\r\nconst monthChosen = (month) => {\r\n  return {\r\n    type: 'MONTH_CHOSEN',\r\n    payload: month\r\n  };\r\n};\r\n\r\nconst weatherLoaded = (data) => {\r\n  return {\r\n    type: 'WEATHER_LOADED',\r\n    payload: data\r\n  };\r\n}\r\n\r\nconst solChosen = (sol) => {\r\n  return {\r\n    type: 'SOL_CHOSEN',\r\n    payload: sol\r\n  }\r\n}\r\n\r\nexport {\r\n  yearChosen,\r\n  monthChosen,\r\n  weatherLoaded,\r\n  solChosen\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Details.css';\r\n\r\nconst Details = ({ data, sol }) => {\r\n  const sol_data = data[sol];\r\n  const date = new Date(sol_data.First_UTC);\r\n  const earthDay = date.toLocaleDateString('en-US', {month: 'long', day: 'numeric', year: 'numeric'});\r\n\r\n  return (\r\n    <div className=\"details\">\r\n      <h3>Sol {sol}</h3>\r\n      <h4>{earthDay}</h4>\r\n      <p>Season: {sol_data.Season} </p>\r\n\r\n      <div className=\"mainData\">\r\n        <InfoBlock\r\n          title=\"Air temperature\"\r\n          measurement=\"°C\"\r\n          data={sol_data.AT}\r\n        />\r\n        <InfoBlock\r\n          title=\"Wind Speed\"\r\n          measurement=\"m/s\"\r\n          data={sol_data.HWS}\r\n        />\r\n        <InfoBlock\r\n          title=\"Pressure\"\r\n          measurement=\"Pa\"\r\n          data={sol_data.PRE}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst InfoBlock = ({ title, measurement, data }) => {\r\n  const transormedData = {\r\n    minimum: data.mn,\r\n    maximum: data.mx,\r\n    average: data.av\r\n  }\r\n\r\n  return (\r\n    <div className=\"InfoBlock\">\r\n      <h5>{title} ({measurement}):</h5>\r\n      {Object.keys(transormedData).map(a => (\r\n        <p key={a}>\r\n          <span>{a}:</span>&nbsp;\r\n          <span>{transormedData[a]}</span>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ sol }) => {\r\n  return { sol }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Details);","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-eclipse-6k77a25kvoc\">\r\n      <div className=\"ldio-y6dphe9xoic\">\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './Error.css';\r\n\r\nconst Error = (error) => {\r\n  return (\r\n    <div className=\"error\">\r\n      <h5>Ooops...</h5>\r\n      <p>Something went wrong</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;","export default class NASAAPIService {\r\n  _apiBase = 'https://api.nasa.gov';\r\n  _apiKey = 'Z1FMxuzDUZu2v1JXYMHQSg40SzLpgua05AfFeELa';\r\n  _apiKeyParam = `api_key=${this._apiKey}`;\r\n\r\n  getResource = async (url, params = []) => {\r\n    const fullUrl = `${this._apiBase}${url}?${params.concat([this._apiKeyParam]).join('&')}`\r\n    const res = await fetch(fullUrl);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${fullUrl}, received ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  // getAsteroids(startDate = '2015-09-07', endDate) {\r\n  //   const params = [`start_date=${startDate}`];\r\n  //\r\n  //   if(endDate) {\r\n  //     params.push(`end_date=${endDate}`)\r\n  //   }\r\n  //\r\n  //   return this.getResource('/neo/rest/v1/feed', params);\r\n  // }\r\n  //\r\n  // getAsteroid(asteroid_id) {\r\n  //   return this.getResource(`/neo/rest/v1/neo/${asteroid_id}`);\r\n  // }\r\n\r\n  getPictureOfTheDay = async (date) => {\r\n    return this.getResource('/planetary/apod', date && [`date=${date}`]);\r\n  }\r\n\r\n  getMarsWeather = async () => {\r\n    return this.getResource('/insight_weather/', ['feedtype=json', 'ver=1.0']);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { weatherLoaded } from \"../../actions\";\r\n\r\nimport MarsWeatherDay from './MarsWeatherDay/MarsWeatherDay';\r\nimport Details from \"./Details/Details\";\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Error from '../Error/Error';\r\nimport NASAAPIService from '../../services/NASAAPIService';\r\nimport './MarsWeather.css';\r\n\r\n\r\nclass MarsWeather extends Component {\r\n  nasaService = new NASAAPIService();\r\n\r\n  state = {\r\n    data: {},\r\n    solKeys: [],\r\n    loading: true,\r\n    error: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.nasaService\r\n      .getMarsWeather()\r\n      .then(this.onWeatherLoaded)\r\n      .catch(this.onError);\r\n  }\r\n\r\n  onWeatherLoaded = (data) => {\r\n    this.props.weatherLoaded(data);\r\n    this.setState({\r\n      data: data,\r\n      solKeys: data.sol_keys,\r\n      loading: false,\r\n      error: false\r\n    });\r\n  }\r\n\r\n  onError = () => {\r\n    this.setState({\r\n      loading: false,\r\n      error: true\r\n    })\r\n  }\r\n\r\n  render (){\r\n    const { data, solKeys, loading, error } = this.state;\r\n    const { isDetailsVisible } = this.props;\r\n\r\n    const hasDate = !(loading || error);\r\n\r\n    const errorMessage = error ? <Error /> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = hasDate ? <MarsWeatherView\r\n                                data={data}\r\n                                solKeys={solKeys}\r\n                                isDetailsVisible={isDetailsVisible && hasDate}\r\n                              /> : null;\r\n\r\n    return (\r\n      <div className=\"marsWeather\">\r\n        <h2>Mars Weather</h2>\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n        </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst MarsWeatherView = ({ data, solKeys, isDetailsVisible }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <ul className=\"latestWeather\">\r\n        {solKeys.map(key => (\r\n          <li key={key}>\r\n            <MarsWeatherDay\r\n              sol={key}\r\n              day={data[key]}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {isDetailsVisible && <Details data={data} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = ({ }) => {\r\n  return { }\r\n};\r\n\r\nconst mapDispatchToProps = { weatherLoaded };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MarsWeather);","import React, { Component } from 'react';\r\nimport MarsWeather from \"../../MarsWeather/MarsWeather\";\r\nimport './MarsWeatherPage.css';\r\n\r\nexport default class MarsWeatherPage extends Component {\r\n  render () {\r\n    return (\r\n      <div id=\"marsWeatherPage\">\r\n        <MarsWeather isDetailsVisible={true} />\r\n      </div>\r\n    );\r\n  }\r\n};","import React from 'react';\r\nimport './TopMenu.css';\r\n\r\nconst TopMenu = () => {\r\n  return (\r\n    <ul className=\"menu\">\r\n      <li><a href=\"/\"><span>Home</span></a></li>\r\n      <li><a href=\"/gallery\"><span>Gallery</span></a></li>\r\n      <li><a href=\"/marsweather\"><span>Mars Weather</span></a></li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TopMenu;","import React, { Component } from 'react';\r\nimport Spinner from '../../../Spinner/Spinner';\r\nimport Error from '../../../Error/Error';\r\nimport NASAAPIService from '../../../../services/NASAAPIService';\r\nimport \"./Preview.css\";\r\n\r\nexport default class Preview extends Component {\r\n  nasaService = new NASAAPIService();\r\n\r\n  state = {\r\n    url: null,\r\n    title: '',\r\n    explanation: '',\r\n    loading: true,\r\n    error: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { date } = this.props;\r\n\r\n    const url = localStorage.getItem(`${date}-url`);\r\n    const title = localStorage.getItem(`${date}-title`);\r\n\r\n    if (url) {\r\n      this.setState({\r\n        url,\r\n        title: title || '',\r\n        loading: false,\r\n        error: false\r\n      });\r\n    } else {\r\n      this.nasaService\r\n        .getPictureOfTheDay(date)\r\n        .then(this.onPictureLoaded)\r\n        .catch(this.onError);\r\n    }\r\n  }\r\n\r\n  onPictureLoaded = (picture) => {\r\n    const { date } = this.props;\r\n\r\n    this.setState({\r\n      url: picture.url,\r\n      title: picture.title,\r\n      loading: false,\r\n      error: false\r\n    });\r\n\r\n    localStorage.setItem(`${date}-url`, picture.url);\r\n    localStorage.setItem(`${date}-title`, picture.title);\r\n  };\r\n\r\n  onError = () => {\r\n    this.setState({\r\n      loading: false,\r\n      error: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { url, title, loading, error } = this.state;\r\n    const { date } = this.props;\r\n\r\n    const hasDate = !(loading || error);\r\n\r\n    const errorMessage = error ? <Error /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasDate ? (<PictureView url={url} title={title} date={date} />) : null;\r\n\r\n    return (\r\n      <li className=\"galleryPreview\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nconst PictureView = ({ url, title, date }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        title={`${date} ${title}`}\r\n        alt={title}\r\n        src={url}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};","export const months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December'\r\n];\r\n\r\nexport const APODfirstyear = 2015;\r\n\r\nexport const today = new Date();\r\n\r\nexport const currentYear = today.getFullYear();\r\n\r\nexport const currentMonth = today.getMonth();\r\n\r\nexport const APODallYears = (new Array(currentYear - APODfirstyear + 1)).fill(APODfirstyear).map((a, i) => APODfirstyear + i);\r\n\r\nexport const getMonthsOptions = (year) => months.map((a, i) => {\r\n  return { value: i + 1, label: a, isDisabled: year === currentYear && i > currentMonth};\r\n})\r\n\r\nexport const defaultMonthOption = { value: currentMonth + 1, label: months[currentMonth] };\r\n\r\nexport const YearsOptions = APODallYears.map((a, i) => {\r\n  return { value: a, label: a };\r\n});\r\n\r\nexport const defaultYearOption = YearsOptions[YearsOptions.length - 1];","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport { connect } from 'react-redux';\r\nimport { monthChosen } from \"../../../../actions\";\r\n\r\nimport { defaultMonthOption } from '../../../../constants';\r\nimport './SelectMonth.css';\r\n\r\nclass SelectMonth extends Component {\r\n  handleChange = (month) => {\r\n    this.props.monthChosen(month.value);\r\n  };\r\n\r\n  render() {\r\n    const { monthsOptions } = this.props;\r\n\r\n    return (\r\n      <Select\r\n        className=\"galleryFilterSelect selectMonth\"\r\n        defaultValue = {defaultMonthOption}\r\n        options={monthsOptions}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ month, monthsOptions }) => {\r\n  return { month, monthsOptions };\r\n};\r\n\r\nconst mapDispatchToProps = { monthChosen };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectMonth);","import React, { Component } from 'react';\r\nimport Select from 'react-select';\r\nimport { connect } from 'react-redux';\r\nimport { yearChosen } from \"../../../../actions\";\r\n\r\nimport { YearsOptions, defaultYearOption } from '../../../../constants';\r\nimport './SelectYear.css';\r\n\r\nclass SelectYear extends Component {\r\n  handleChange = (year) => {\r\n      this.props.yearChosen(year.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        className=\"galleryFilterSelect selectYear\"\r\n        defaultValue={defaultYearOption}\r\n        onChange={this.handleChange}\r\n        options={YearsOptions}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ year }) => {\r\n  return { year };\r\n};\r\n\r\nconst mapDispatchToProps = { yearChosen };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectYear);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Preview from './Preview/Preview';\r\nimport SelectMonth from './SelectMonth/SelectMonth';\r\nimport SelectYear from \"./SelectYear/SelectYear\";\r\nimport './GalleryPage.css';\r\n\r\n\r\nclass GalleryPage extends Component {\r\n  startDate = new Date(this.props.year, this.props.month, 1);\r\n  endDate = new Date();\r\n\r\n  state = {\r\n    dates: []\r\n  };\r\n\r\n  twoDigits = (n) => `${n < 10 ? '0' : ''}${n}`;\r\n\r\n  formatDate(date) {\r\n    const year = date.getFullYear();\r\n    const month = this.twoDigits(date.getMonth() + 1);\r\n    const day = this.twoDigits(date.getDate());\r\n\r\n    return `${year}-${month}-${day}`;\r\n  }\r\n\r\n  updateDates () {\r\n    this.startDate = new Date(this.props.year, this.props.month, 1);\r\n    this.endDate = new Date(this.props.year, this.props.month + 1, 1);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateGalleryPreviews();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps.year !== this.props.year || prevProps.month !== this.props.month) {\r\n      this.updateDates();\r\n      this.generateGalleryPreviews();\r\n    }\r\n  }\r\n\r\n  generateGalleryPreviews = (start = this.startDate, end = this.endDate) => {\r\n    const dates = [];\r\n\r\n    for(let i = start; i < end; i.setDate(i.getDate() + 1)) {\r\n      dates.unshift(this.formatDate(i));\r\n    }\r\n\r\n    this.setState({ dates: dates });\r\n  };\r\n\r\n  render() {\r\n    const { dates } = this.state;\r\n\r\n    return (\r\n      <div className=\"Gallery\">\r\n        <h2> Gallery </h2>\r\n        <div className=\"galleryFilter\">\r\n          <SelectYear />\r\n          <SelectMonth />\r\n        </div>\r\n        <ul className=\"GalleryContent\">\r\n          {dates.map((date) => <Preview date={date} key={date} />)}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ year, month }) => {\r\n  return { year, month }\r\n};\r\n\r\nexport default connect(mapStateToProps)(GalleryPage);","import React, { Component } from 'react';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Error from '../Error/Error';\r\nimport NASAAPIService from '../../services/NASAAPIService';\r\nimport './PictureOfTheDay.css';\r\n\r\n\r\nexport default class PictureOfTheDay extends Component {\r\n  nasaService = new NASAAPIService();\r\n\r\n  state = {\r\n    url: null,\r\n    title: '',\r\n    explanation: '',\r\n    hdurl: '*',\r\n    loading: true,\r\n    error: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.nasaService\r\n      .getPictureOfTheDay()\r\n      .then(this.onPictureLoaded)\r\n      .catch(this.onError);\r\n  }\r\n\r\n  onPictureLoaded = (picture) => {\r\n    console.log(picture);\r\n\r\n    this.setState({\r\n      url: picture.url,\r\n      hdurl: picture.hdurl,\r\n      title: picture.title,\r\n      explanation: picture.explanation,\r\n      loading: false,\r\n      error: false\r\n    });\r\n  };\r\n\r\n  onError = () => {\r\n    this.setState({\r\n      loading: false,\r\n      error: true\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { url, hdurl, title, explanation, loading, error } = this.state;\r\n\r\n    const hasDate = !(loading || error);\r\n\r\n    const errorMessage = error ? <Error /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasDate ? (<PictureView\r\n      url={url}\r\n      hdurl={hdurl}\r\n      title={title}\r\n      explanation={explanation}\r\n    />) : null;\r\n\r\n    return (\r\n      <div className=\"pictureOfTheDay\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst PictureView = ({ url, hdurl, title, explanation }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"image\">\r\n        <img\r\n          alt={title}\r\n          src={url}\r\n        />\r\n      </div>\r\n      <div className=\"description\">\r\n        <h2>{title}</h2>\r\n        <p>{explanation}</p>\r\n        <p className=\"download\"><a href={hdurl} target=\"_blank\" rel=\"noopener noreferrer\">Download HD</a></p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};","import React from 'react';\r\nimport PictureOfTheDay from '../../PictureOfTheDay/PictureOfTheDay';\r\nimport MarsWeather from \"../../MarsWeather/MarsWeather\";\r\nimport './HomePage.css';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <PictureOfTheDay />\r\n      <MarsWeather viewDetails={false} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport MarsWeatherPage from \"../Pages/MarsWeatherPage/MarsWeatherPage\";\r\nimport TopMenu from \"../TopMenu/TopMenu\";\r\nimport GalleryPage from \"../Pages/GalleryPage/GalleryPage\";\r\nimport HomePage from \"../Pages/HomePage/HomePage\";\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <TopMenu />\r\n\r\n        <Route path=\"#\" component={HomePage} exact />\r\n        <Route path=\"#/gallery\" component={GalleryPage} />\r\n        <Route path=\"#/marsweather\" component={MarsWeatherPage} />\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {currentYear, currentMonth, getMonthsOptions} from \"../constants\";\r\n\r\nconst initialState = {\r\n  year: currentYear,\r\n  month: currentMonth,\r\n  monthsOptions: getMonthsOptions(currentYear),\r\n  sol: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'YEAR_CHOSEN':\r\n      return {\r\n        ...state,\r\n        monthsOptions: getMonthsOptions(action.payload),\r\n        year: action.payload\r\n      };\r\n    case 'MONTH_CHOSEN':\r\n      return {\r\n        ...state,\r\n        month: action.payload\r\n      };\r\n    case 'WEATHER_LOADED':\r\n      return {\r\n        ...state,\r\n        sol: action.payload.sol_keys[0]\r\n      };\r\n    case 'SOL_CHOSEN':\r\n      return {\r\n        ...state,\r\n        sol: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\n\r\nimport reducer from './reducers';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App/App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}